pb + ra + pa = sa ra
pa + rb + pb = sb rb

sa ra + sa ra = pb + ra + ra + pa

sa rra + sa rra = pb + rra + rra + pa

pb + rra + pa == rra + sa
pa + rrb +  pb == rrb + sb

NE PAS FAIRE pb ra pa rra = sa (premiere regle : pb ra pa = sa ra + rra donc sa)

Inverser le sens de move pour faire des correction via addmove plus rapide, et inverser a la fin uniquement
un simple addfront a la place de addback suffie, changer le count_last_op en comptant du debus et non de la fin (evite la fonction en recurence)


1			2
2			1
3			3
4			4

1  2		1
3			3
4			4
			2
3 2
4 
1

2
3
4
1


calculer la plus longue sequence delement trie, mettre le reste dans B, trier B, remettre dans A ???



Triradix
ordre des piles, inverser dans right pour pa a la fin
le bottom devient up de facon a ne pas rr(a/b) :

right up = petit, right botom = moyen left botom = grand
trier right up, ensuite mettre right bottom dessus et trier en le laissant là.
apres le tri right tout entier == moyen+petit (ordre decroissant)
De meme left bottom trié revient dans left up
plus qua push dans a

pout right c'est pareille : 
left up = grand, left bottom = moyen (right bottom = petit)
right bottom trié revient a right up
left up trie en premier, puis en faissant peut ettre rrr ici on peut economiser pour remonter le left bottom en meme temps que le right bootom
puis trier left bottom en le laissant en haut. (ordre croissant)
plus qua push dans b
